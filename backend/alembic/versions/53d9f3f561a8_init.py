"""Init

Revision ID: 53d9f3f561a8
Revises: 
Create Date: 2022-11-08 21:12:51.102729

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '53d9f3f561a8'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ingredient',
    sa.Column('uuid', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('packing', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_ingredient_uuid'), 'ingredient', ['uuid'], unique=False)
    op.create_table('recipe',
    sa.Column('uuid', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('short_description', sa.String(), nullable=True),
    sa.Column('recipe_text', sa.String(), nullable=True),
    sa.Column('profit', sa.Float(), nullable=True),
    sa.Column('is_trade', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_recipe_uuid'), 'recipe', ['uuid'], unique=False)
    op.create_table('users',
    sa.Column('uuid', sa.Integer(), nullable=False),
    sa.Column('nickname', sa.String(), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('nickname')
    )
    op.create_index(op.f('ix_users_uuid'), 'users', ['uuid'], unique=False)
    op.create_table('layer',
    sa.Column('uuid', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('diameter', sa.Float(), nullable=True),
    sa.Column('is_template', sa.Boolean(), nullable=True),
    sa.Column('uuid_recipe', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['uuid_recipe'], ['recipe.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_layer_uuid'), 'layer', ['uuid'], unique=False)
    op.create_table('consistency_ingredient',
    sa.Column('uuid', sa.Integer(), nullable=False),
    sa.Column('uuid_layer', sa.Integer(), nullable=True),
    sa.Column('uuid_ingredient', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['uuid_ingredient'], ['ingredient.uuid'], ),
    sa.ForeignKeyConstraint(['uuid_layer'], ['layer.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_consistency_ingredient_uuid'), 'consistency_ingredient', ['uuid'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_consistency_ingredient_uuid'), table_name='consistency_ingredient')
    op.drop_table('consistency_ingredient')
    op.drop_index(op.f('ix_layer_uuid'), table_name='layer')
    op.drop_table('layer')
    op.drop_index(op.f('ix_users_uuid'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_recipe_uuid'), table_name='recipe')
    op.drop_table('recipe')
    op.drop_index(op.f('ix_ingredient_uuid'), table_name='ingredient')
    op.drop_table('ingredient')
    # ### end Alembic commands ###
